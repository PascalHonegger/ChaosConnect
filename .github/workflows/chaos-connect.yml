name: ChaosConnect

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - main

jobs:
  doppio:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use latest Node.js 15
        uses: actions/setup-node@v2
        with:
          node-version: "15"
      - name: Install dependencies
        run: npm ci
        working-directory: frontend
      - name: Generate grpc-web Protobuf
        run: docker-compose -f docker-compose.gen.yml run --rm gen_grpc_joestar_client
      - name: Lint
        run: npm run validate
        working-directory: frontend

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
      - name: Docker meta
        id: meta
        uses: crazy-max/ghaction-docker-meta@v2
        with:
          images: |
            ghcr.io/pascalhonegger/cc-doppio
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=ref,event=pr

      - name: Build and push container images
        uses: docker/build-push-action@v2
        with:
          context: frontend
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name == 'push' && contains(github.ref, 'refs/tags/') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  rohan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 15
        uses: actions/setup-java@v2
        with:
          java-version: '15'
          distribution: 'adopt'
          architecture: x64

      - name: Test
        run: ./gradlew :rohan:test
        working-directory: backend

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
      - name: Docker meta
        id: meta
        uses: crazy-max/ghaction-docker-meta@v2
        with:
          images: |
            ghcr.io/pascalhonegger/cc-rohan
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=ref,event=pr

      - name: Build and push container images
        uses: docker/build-push-action@v2
        with:
          context: backend
          file: backend/Dockerfile.rohan
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name == 'push' && contains(github.ref, 'refs/tags/') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  joestar:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 15
        uses: actions/setup-java@v2
        with:
          java-version: '15'
          distribution: 'adopt'
          architecture: x64

      - name: Test
        run: ./gradlew :joestar:test
        working-directory: backend

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
      - name: Docker meta
        id: meta
        uses: crazy-max/ghaction-docker-meta@v2
        with:
          images: |
            ghcr.io/pascalhonegger/cc-joestar
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=ref,event=pr

      - name: Build and push container images
        uses: docker/build-push-action@v2
        with:
          context: backend
          file: backend/Dockerfile.joestar
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name == 'push' && contains(github.ref, 'refs/tags/') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  speedwagon:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
      - name: Docker meta
        id: meta
        uses: crazy-max/ghaction-docker-meta@v2
        with:
          images: |
            ghcr.io/pascalhonegger/cc-speedwagon
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=ref,event=pr

      - name: Build and push container images
        uses: docker/build-push-action@v2
        with:
          context: proxy
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name == 'push' && contains(github.ref, 'refs/tags/') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
